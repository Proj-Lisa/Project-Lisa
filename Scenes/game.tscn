[gd_scene load_steps=21 format=3 uid="uid://bjxaqr3y16g2c"]

[ext_resource type="PackedScene" uid="uid://4byaim2dyifn" path="res://Scenes/player.tscn" id="1_ebmjs"]
[ext_resource type="PackedScene" uid="uid://bt2hpyh1oycvy" path="res://Scenes/BG/BG-LakeFrontWrap.tscn" id="1_h4fw4"]
[ext_resource type="PackedScene" uid="uid://dltvqyrf1ejj4" path="res://Scenes/Environments/Ground/g-00-full.tscn" id="2_ldgsr"]
[ext_resource type="PackedScene" uid="uid://c6h5ot0h77gm3" path="res://Scenes/Environments/e-bridge-water.tscn" id="2_qxrlw"]
[ext_resource type="PackedScene" uid="uid://cf0jur3itmmmf" path="res://Scenes/Environments/Ground/g-01-wavy.tscn" id="3_ldgsr"]
[ext_resource type="PackedScene" uid="uid://di6ipybmw2iea" path="res://Scenes/Environments/e_platform_a.tscn" id="4_3dryh"]
[ext_resource type="PackedScene" path="res://Scenes/Environments/wrapper.tscn" id="5_rfjv2"]
[ext_resource type="PackedScene" uid="uid://bwi8vqoj6h6fs" path="res://Scenes/Environments/platform_moving_drift.tscn" id="5_wowpa"]
[ext_resource type="PackedScene" uid="uid://dq1md52vw1p2r" path="res://Scenes/Pickups/orb.tscn" id="6_1l0tm"]
[ext_resource type="PackedScene" uid="uid://dr1biwdnr5s8m" path="res://Scenes/Pickups/orb_group_a_03.tscn" id="7_v158k"]
[ext_resource type="PackedScene" uid="uid://dh0u567rm4vi5" path="res://Scenes/Environments/e-build-apt1.tscn" id="8_rku1e"]
[ext_resource type="PackedScene" uid="uid://cfgw14us7s7xe" path="res://Scenes/Environments/slingshot.tscn" id="8_v158k"]
[ext_resource type="PackedScene" uid="uid://cv2e4d63823nk" path="res://Scenes/Enemies/copter.tscn" id="9_rfjv2"]
[ext_resource type="PackedScene" uid="uid://c4qs1178hbb1y" path="res://Scenes/Pickups/iCoffee.tscn" id="11_1phco"]

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_wrm1d"]
distance = -259.0

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_h4fw4"]
distance = -47.0

[sub_resource type="Animation" id="Animation_i6g32"]
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(586, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_wowpa"]
resource_name = "UpDown"
loop_mode = 2
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(586, -0.25, 0, 0.25, 0, 316, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 1)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0, 181, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 1)
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_1l0tm"]
_data = {
&"RESET": SubResource("Animation_i6g32"),
&"UpDown": SubResource("Animation_wowpa")
}

[sub_resource type="GDScript" id="GDScript_ebmjs"]
script/source = "extends CharacterBody2D

#const SPEED = 540.0 #deprecated: used as backup linear movement used within 'apply the movement' section
const ACCEL_MAIN = 20	#was 50
const ACCEL_AIR = 12	#less control in the air
const ACCEL_JUMP = -120
const MIN_SPEED_AFTER_TURN = 90 #jumpstart to get out of lazy/ice-sliding turns

const maxSpeed = 800
const runSpeed3 = 700
const brakeSpeed = 300
const runSpeed2 = 240

const JUMP_VELOCITY = -600	#negative y goes up
const JUMP_VELOCITY_SHORT = -400
const maxJump = 520
const GRAVITY_FACTOR = 1.8	#increases gravity for faster-fall responsiveness
var disableJump = false		#used to prevent jumping while in the air and other states

const hangtimeWINDOW = 10
const hangtimeSPEED = 0.08
var hangtime = 1 #normally no effect on velocity, but use a move_toward 0 while holding Jump, release to reset
var hangtimeStart = false

var DECEL = 80			#used to slow down
var DECEL_SLIDE = 16	#for isAbrupt
var goingUp = true		#vertical direction, fall or jump animation
var smoothingTimer = 0	#prevents flashing of fall sprite when running over little bumps
const smoothingTimerMax = 7

var isAbruptStop = false #used for brake conditional and faster turn
var brakeTimer = 0		#used to lock braking
const END_BRAKING = 10	#frames braking locks Mona

@onready var monaSprite = $MonaSprite2D #for animations

@onready var wrapLeftSeam = $\"../Ground/WrapperLeft\" #for screenwrapping
@onready var wrapRightSeam = $\"../Ground/WrapperRight\"
@onready var cameraMona = $CameraMona

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta * GRAVITY_FACTOR * hangtime

	# Handle jump.
	#if Input.is_action_just_pressed(\"jump\") and is_on_floor():
	#	velocity.y = JUMP_VELOCITY #first draft flat jump
	
	#variable Jump, up to max, and disable jump until hitting the ground with input released (otherwise hops)
	if Input.is_action_pressed(\"jump\") and disableJump == false:
		velocity.y += ACCEL_JUMP
		#print(\"jump\")
	if abs(velocity.y) > maxJump or Input.is_action_just_released(\"jump\"):
		disableJump = true
	if is_on_floor() and not Input.is_action_pressed(\"jump\"):
		disableJump = false

	#if still holding jump at the apex, then sustain the jump for a brief moment, scaled with horizontal speed
	if velocity.y > (hangtimeWINDOW * -1) and velocity.y < hangtimeWINDOW and Input.is_action_pressed(\"jump\") and hangtimeStart == false:
		hangtimeStart = true
		hangtime = 0
	if hangtimeStart == true and Input.is_action_pressed(\"jump\"): #hangtime decays while held
		hangtime = move_toward(hangtime, 1, hangtimeSPEED)
		#print(\"hangtime!\")
	else: #let go, reset
		hangtimeStart = false
		hangtime = 1
	
	# Get input direction: -1, 0, 1
	var direction := Input.get_axis(\"move_Left\", \"move_Right\")
	#determine vertical direction; since physics does not use this value, it does not need to be numerical
	if velocity.y > 0:
		goingUp = false
	else:
		goingUp = true
	
	if Input.is_action_pressed(\"move_Left\") and velocity.x > brakeSpeed:
		isAbruptStop = true
		#print(\"isAbruptStop\")
	elif Input.is_action_pressed(\"move_Right\") and velocity.x < (brakeSpeed * -1):
		isAbruptStop = true
		#print(\"isAbruptStop\")
	else:
		isAbruptStop = false
	
	#flip the sprite
	if not isAbruptStop:
		if direction > 0:
			monaSprite.flip_h = false
		elif direction < 0:
			monaSprite.flip_h = true
	else:
		pass
	
	#play animations
	if is_on_floor():
		smoothingTimer = 0 #for animation smoothing
		if direction == 0:
			monaSprite.play(\"A-Idle\")
		else: #different run speeds
			if not isAbruptStop: #brake animation has priority over which speed would play
				if abs(velocity.x) > runSpeed3:
					monaSprite.play(\"B-Run3\")
				elif abs(velocity.x) > runSpeed2:
					monaSprite.play(\"B-Run2\")
				else:
					monaSprite.play(\"B-Run1\")
			else:
				monaSprite.play(\"E-Brake\")
	else:
		smoothingTimer += 1
		if not goingUp:
			if smoothingTimer > smoothingTimerMax:
				monaSprite.play(\"D-Fall\")
				#print(\"fall\")
			else:
				pass
		else:
			monaSprite.play(\"C-Jump\")
	
	#apply the movement
	if direction:
		# velocity.x = direction * SPEED # original backup linear version
		if not is_on_floor():
			velocity.x += direction * ACCEL_AIR
		else: #brake/Decel for a abrupt turns
			if isAbruptStop:
				velocity.x = move_toward(velocity.x, 0, DECEL_SLIDE)
				if brakeTimer == END_BRAKING:
					velocity.x = 0
					print(\"END_BRAKING\")
					brakeTimer = 0
				else:
					brakeTimer += 1
			else:
				brakeTimer = 0 #failsafe inclusion
				velocity.x += direction * ACCEL_MAIN
	#if not moving, slow down
	elif is_on_floor(): #dont slow down in the air
		velocity.x = move_toward(velocity.x, 0, DECEL) #last variable was SPEED when linear
	
	#cap speed in both directions, but don't make idle slide forever
	if abs(velocity.x) > maxSpeed:
		if direction > 0:
			velocity.x = maxSpeed
		elif direction < 0:
			velocity.x = maxSpeed * -1
	
	#screen wrap based on direction
	screen_wrap()
	
	move_and_slide()

#functions called to wrap Mona in the level, at the safe zone where stuff doesn't move around...
func screen_wrap():
	cameraMona.limit_smoothed = false #disable camera actions for a more seamless snap
	cameraMona.position_smoothing_enabled = false
	
	position.x = wrapf(position.x,wrapLeftSeam.position.x,wrapRightSeam.position.x) #move Mona b/w boundaries
	#cameraMona.position.x = wrapf(cameraMona.position.x,wrapLeftSeam.position.x,wrapRightSeam.position.x)
	
	cameraMona.limit_smoothed = true #re-enable camera smoothing
	cameraMona.position_smoothing_enabled = true
"

[node name="Game" type="Node2D"]

[node name="BG" type="Node" parent="."]

[node name="Bg-lakeFrontWrap" parent="BG" instance=ExtResource("1_h4fw4")]
position = Vector2(-1509, 191)

[node name="Ground" type="Node" parent="."]

[node name="BotBorder" type="StaticBody2D" parent="Ground"]

[node name="WorldBoundary" type="CollisionShape2D" parent="Ground/BotBorder"]
position = Vector2(-5, -56)
shape = SubResource("WorldBoundaryShape2D_wrm1d")

[node name="v1-Flat" type="Node" parent="Ground"]

[node name="G-00-full" parent="Ground/v1-Flat" instance=ExtResource("2_ldgsr")]
position = Vector2(383, 127)

[node name="G-00-full3" parent="Ground/v1-Flat" instance=ExtResource("2_ldgsr")]
position = Vector2(5423, 127)

[node name="G-00-full2" parent="Ground/v1-Flat" instance=ExtResource("2_ldgsr")]
position = Vector2(-1509, 127)

[node name="G-01-wavy" parent="Ground/v1-Flat" instance=ExtResource("3_ldgsr")]
position = Vector2(1663, 127)

[node name="G-01-wavy2" parent="Ground/v1-Flat" instance=ExtResource("3_ldgsr")]
position = Vector2(2943, 127)

[node name="Slingshot" parent="Ground" instance=ExtResource("8_v158k")]
position = Vector2(-104, 234)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/Slingshot"]
position = Vector2(-89, -81)
shape = SubResource("WorldBoundaryShape2D_h4fw4")

[node name="WrapperLeft" parent="Ground" instance=ExtResource("5_rfjv2")]
position = Vector2(-1430, 304)
collision_mask = 2

[node name="WrapperRight" parent="Ground" instance=ExtResource("5_rfjv2")]
position = Vector2(2571, 310)

[node name="Scene1-Bridge" type="Node" parent="."]

[node name="e-platform-a" parent="Scene1-Bridge" instance=ExtResource("4_3dryh")]
position = Vector2(-983, 69)

[node name="e-platform-a2" parent="Scene1-Bridge/e-platform-a" instance=ExtResource("4_3dryh")]
position = Vector2(303, -71)

[node name="Platform-Moving-Drift" parent="Scene1-Bridge" instance=ExtResource("5_wowpa")]
position = Vector2(586, 0)

[node name="AnimationPlayer" type="AnimationPlayer" parent="Scene1-Bridge/Platform-Moving-Drift"]
libraries = {
&"": SubResource("AnimationLibrary_1l0tm")
}
autoplay = "UpDown"

[node name="E-bridge-water" parent="Scene1-Bridge" instance=ExtResource("2_qxrlw")]
position = Vector2(-17, 213)

[node name="Scene2-Copter" type="Node" parent="."]

[node name="E-build-apt1" parent="Scene2-Copter" instance=ExtResource("8_rku1e")]
position = Vector2(4325, 255)

[node name="E-build-apt2" parent="Scene2-Copter" instance=ExtResource("8_rku1e")]
position = Vector2(4525, 255)

[node name="E-build-apt3" parent="Scene2-Copter" instance=ExtResource("8_rku1e")]
position = Vector2(4525, -48)

[node name="E-build-apt4" parent="Scene2-Copter" instance=ExtResource("8_rku1e")]
position = Vector2(5361, 255)

[node name="E-build-apt5" parent="Scene2-Copter" instance=ExtResource("8_rku1e")]
position = Vector2(5361, -48)

[node name="Copter" parent="Scene2-Copter" instance=ExtResource("9_rfjv2")]
position = Vector2(4966, -99)

[node name="Pickups" type="Node" parent="."]

[node name="Objectives" type="Node" parent="Pickups"]

[node name="iCoffee" parent="Pickups/Objectives" instance=ExtResource("11_1phco")]
position = Vector2(574, -75)

[node name="iCoffee2" parent="Pickups/Objectives" instance=ExtResource("11_1phco")]
position = Vector2(-1381, 55)

[node name="Orbs" type="Node" parent="Pickups"]

[node name="Orb" parent="Pickups/Orbs" instance=ExtResource("6_1l0tm")]
position = Vector2(-679, -40)

[node name="Orb2" parent="Pickups/Orbs" instance=ExtResource("6_1l0tm")]
position = Vector2(-983, 32)

[node name="Orb-Group-A03" parent="Pickups/Orbs" instance=ExtResource("7_v158k")]
visibility_layer = 2
position = Vector2(-509, -99)

[node name="Orb-Group-A04" parent="Pickups/Orbs" instance=ExtResource("7_v158k")]
visibility_layer = 2
position = Vector2(1, -16)

[node name="Mona" parent="." instance=ExtResource("1_ebmjs")]
unique_name_in_owner = true
z_index = 5
position = Vector2(287, 24)
script = SubResource("GDScript_ebmjs")

[node name="CameraMona" type="Camera2D" parent="Mona"]
position = Vector2(-1, -92)
zoom = Vector2(2, 2)
limit_bottom = 200
limit_smoothed = true
position_smoothing_enabled = true
position_smoothing_speed = 10.0

[node name="FG" type="Node" parent="."]
